name: Build & Release CLI

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Build and Upload Binaries
    runs-on: ubuntu-latest
    permissions:
      contents: write

    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true

      - name: Build wed binaries
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          ext=""
          if [[ "${GOOS}" == 'windows' ]]; then
            ext=".exe"
          fi
          BUILD_DIR="dist/wed-${GOOS}-${GOARCH}"
          mkdir -p "${BUILD_DIR}"
          go build -ldflags="-s -w -X main.Version=${{ github.ref_name }}" -o "${BUILD_DIR}/wed${ext}" ./cmd/wed
          # Exporting BUILD_DIR var
          echo "BUILD_DIR=$BUILD_DIR" >> $GITHUB_ENV

      - name: Compress man pages (Linux/macOS only)
        if: matrix.goos != 'windows'
        run: |
          MANUALS_DIR="${BUILD_DIR}/manuals"
          mkdir -p "${MANUALS_DIR}"
          for f in man/*.[0-9]; do
            gzip -9 -c "$f" > ${MANUALS_DIR}/$(basename "$f").gz
          done

      - name: Checksum and sign
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          # Create checksums
          find dist -type f -name "wed*" -exec sha256sum {} + > SHA256SUMS

          # Import GPG private key
          echo "$GPG_PRIVATE_KEY" | gpg --batch --yes --import

          # Sign the checksums
          gpg --batch --yes --passphrase "$GPG_PASSPHRASE" \
              --pinentry-mode loopback \
              --armor --output SHA256SUMS.asc \
              --detach-sign SHA256SUMS

          # Optional: verify signature
          gpg --verify SHA256SUMS.asc SHA256SUMS


      - name: Bundle releases
        run: |
          INSTALL_SCRIPT="scripts/${{ matrix.goos }}-artifact-install"
          if [ "${{ matrix.goos }}" = "windows" ]; then
            cp "$INSTALL_SCRIPT.bat" "$BUILD_DIR/install.bat"
            zip -j "$BUILD_DIR.zip" "$BUILD_DIR"/*
          else
            cp "$INSTALL_SCRIPT.sh" "$BUILD_DIR/install.sh"
            chmod +x "$BUILD_DIR/install.sh"
            tar -czf "$BUILD_DIR.tar.gz" -C "$BUILD_DIR" .
          fi

      - name: Upload release assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.zip
            dist/*.tar.gz
            SHA256SUMS
            SHA256SUMS.asc

