name: Build & Release CLI

on:
  push:
    tags:
      - 'v*'  # Only run on version tags like v1.0.0

jobs:
  release:
    name: Build and Upload Binaries
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: darwin
            goarch: arm64  # Skip M1 for now if not supported

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          mkdir -p dist
          EXT=""
          if [ "${{ matrix.goos }}" = "windows" ]; then
            EXT=".exe"
          fi

          OUTPUT_NAME="wed${EXT}"
          BUILD_DIR="dist/wed-${{ matrix.goos }}-${{ matrix.goarch }}"
          mkdir -p "$BUILD_DIR"

          # Build the binary
          go build -o "$BUILD_DIR/$OUTPUT_NAME" ./cmd/wed

          # Compress accordingly
          cd dist
          if [ "${{ matrix.goos }}" = "windows" ]; then
            zip -r "wed-${{ matrix.goos }}-${{ matrix.goarch }}.zip" "wed-${{ matrix.goos }}-${{ matrix.goarch }}"
          else
            tar -czf "wed-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz" "wed-${{ matrix.goos }}-${{ matrix.goarch }}"
          fi
          cd ..

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.zip
            dist/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

