name: wed-build
author: DazFather
description: "Build a static site using the wed CLI"
branding:
  icon: 'skip-forward'
  color: 'purple'

inputs:
  flags:
    description: Flags to pass to `wed build`.
    required: false
    default: ""

runs:
  using: "composite"
  steps:
    - name: Set platform info
      id: platform
      shell: bash
      run: |
        case "${{ runner.os }}" in
          Linux | macOS)
            EXT="tar.gz"
            BINARY="wed"
            ;;
          Windows)
            EXT="zip"
            BINARY="wed.exe"
            ;;
          *)
            echo "Unsupported OS: ${{ runner.os }}"
            exit 1
            ;;
        esac

        case "${{ runner.arch }}" in
          X64)
            ARCH="amd64"
            ;;
          ARM64)
            ARCH="arm64"
            ;;
          *)
            echo "Unsupported architecture: ${{ runner.arch }}"
            exit 1
            ;;
        esac

        FILENAME="wed-${{ runner.os }}-${ARCH}.${EXT}"

        echo "ext=$EXT" >> "$GITHUB_OUTPUT"
        echo "filename=$FILENAME" >> "$GITHUB_OUTPUT"

    - name: Download wed v1.0.0-alpha.8
      shell: bash
      run: |
        URL="https://github.com/DazFather/Wednesday/releases/download/v1.0.0-alpha.8/${{ steps.platform.outputs.filename }}"
        echo "Downloading $URL"
        curl -sSL "$URL" -o "wed-archive.${{ steps.platform.outputs.ext }}"

    - name: Extract wed binary
      shell: bash
      run: |
        if [[ "${{ steps.platform.outputs.ext }}" == "zip" ]]; then
          unzip -p wed-archive.zip wed.exe > wed.exe
        else
          tar -zxvf wed-archive.tar.gz ./wed
        fi
        ls -la

    - name: Normalize wed binary
      shell: bash
      run: |
        if [ "${{ runner.os }}" = "Windows" ]; then
          mv wed.exe wed
        else
          chmod +x wed
        fi
        echo "$PWD" >> "$GITHUB_PATH"

    - name: Print working directory
      shell: bash
      run: |
        pwd

    - name: List project contents
      shell: bash
      run: |
        ls -laR

    - name: Build site
      shell: bash
      run: |
        ./wed build ${{ inputs.flags }}
